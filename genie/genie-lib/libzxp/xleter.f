C
      SUBROUTINE XLETER(XO,YO,STRING, IPOS )
CPV
C
      INTEGER ITITFN
      INTEGER IFONTT
      INTEGER IPV
      INTEGER KFULL
      INTEGER KCOL
      INTEGER LCOL
      INTEGER MCOL
      INTEGER N1COL
      INTEGER ICOLTX
      INTEGER ITURNPS
      INTEGER IPSC
      INTEGER IPSCTMP
      REAL XO
      REAL YO
      INTEGER ILEN
      INTEGER IFAIL
      INTEGER IPOS
      INTEGER IXCHR
      INTEGER IYCHR
      REAL CXY
      REAL SY
      REAL HCTR
      REAL YFACTR
      REAL SX
      REAL XFACTR
      REAL CRATIO
      INTEGER KFONT
      REAL FACTOR
      REAL XCHMO
      REAL YCHMO
      REAL XCHPO
      REAL XLTRNX
      REAL YCHPO
      REAL XLTRNY
      INTEGER N
      INTEGER ITX
      INTEGER ICHR
      INTEGER I
      INTEGER ICRAM
      INTEGER IASCII
      INTEGER NCD
      INTEGER IX
      REAL XWIDTH
      REAL XSPOS
      REAL YSPOS
      REAL XSP
      REAL YSP
      REAL XTPOS
      REAL YTPOS
      INTEGER ICD
      INTEGER JY
      INTEGER NUNDLN
      REAL XST
      REAL YST
      REAL XFI
      REAL YFI
      INTEGER ICTX2
      INTEGER ICTX3
      INTEGER ICTX4
      INTEGER IVERT
      INTEGER IIN
      INTEGER IT2
      INTEGER IT3
      INTEGER KT4
      INTEGER KT2
      INTEGER KT3
      INTEGER KT5
      INTEGER KFONTT
      INTEGER KFNTCOL
      INTEGER IPSCEXP
      INTEGER IMASKCOL
      REAL XCHPEN
      REAL YCHPEN
      REAL PL
      REAL PR
      REAL PB
      REAL PT
      REAL XRANGE
      REAL YRANGE
      REAL XL
      REAL XR
      REAL YB
      REAL YT
      REAL XSCALE
      REAL YSCALE
      REAL SCTR
C
      COMMON /XPVD01/ IPV,IPSC,IPSCTMP,ICOLTX(4),IPSCEXP,IMASKCOL
C
CPV
      COMMON /XCHP21/ XCHPEN, YCHPEN ,XCHMO,YCHMO,XCHPO,YCHPO
      COMMON /XPHY01/ PL,PR,PB,PT,XRANGE,YRANGE
      COMMON /XMAP04/ XL,XR,YB,YT,XSCALE,YSCALE
      COMMON /XFTR06/ XFACTR,YFACTR
      COMMON /XCHA20/ HCTR,SCTR,CRATIO, KFONT,NUNDLN
      COMMON /XASC12/ IASCII(300)
      COMMON /XCHR30/ ICRAM(256)
      COMMON /XCHR31/ CHDATA
      COMMON /XCHR32/ ICDATA
      INTEGER ICDATA (0:150, 32:127)
      CHARACTER     CTEMP*1, CH*5,CHDATA(127)*300
      CHARACTER*(*) STRING
      LOGICAL MODE
      INTEGER ICTX(3)
      INTEGER ITITLPS,ITITLSZ,ITITLCL,IDISFONT,IFNTCOL
      SAVE ITITLPS,ITITLSZ,ITITLCL,ITITFN,IFONTT,IFNTCOL
      DATA ITITLPS/0/,ITITLSZ/57/,ITITLCL/0/,ITITFN/1/,
     :     IDISFONT/0/,IFONTT/0/,IFNTCOL/1/
C
CPV  change for efficient dashed lines
      IF(IPV.EQ.1)THEN
      CALL XQFULL(KFULL)
      IF(KFULL.NE.1)CALL XFULL
      ENDIF
      CALL XQCOL(KCOL,LCOL,MCOL,N1COL)
      CALL XLCOL(ICOLTX(1),ICOLTX(2),ICOLTX(3),ICOLTX(4))
      CALL XSAVLB
      ITURNPS=0
      IF (ITITLPS.NE.0.AND.(IPSC.NE.0.OR.IPSCTMP.NE.0)) THEN
         ITURNPS=1
         CALL XPSTITL(XO-0.01,YO,STRING,ITITLSZ,
     :                ITITLCL,ITITLPS,ITITFN)
         CALL XPSCOFF
      END IF
CPV
      IF (IDISFONT.EQ.1) THEN
         ILEN=LEN(STRING)
         IFAIL=0
         CALL DISFNT(XO,YO,STRING,IPOS,ILEN,IFONTT,IFNTCOL,IFAIL)
         IF (IFAIL.EQ.0) THEN
            CALL XCPNUP(0.0,0.0)
            CALL XDISOFF
            GO TO 200
         END IF
      END IF
C
      CH=CHDATA(2)
      READ(CH  ,103)IXCHR,IYCHR
      CXY=0.75
      SY = HCTR /( YFACTR *IYCHR)
      SX = HCTR /( XFACTR *IYCHR) *CRATIO/CXY
      IF( KFONT.EQ.2) THEN
      FACTOR=6.0/4.2
      SX=SX*FACTOR
      SY=SY*FACTOR
      ENDIF

      XCHMO=XO
      YCHMO=YO
      XCHPO=XLTRNX(XO)
      YCHPO=XLTRNY(YO)
      N =   LEN (STRING)
      IF( IPOS.LT.0) GOTO 600
      ITX=0
      DO 8 ICHR=1,N
      CTEMP = STRING (ICHR:ICHR)
      I = ICHAR(CTEMP)
      IF (I.NE.0) I = ICRAM(I)
      IF (I.NE.0) I = IASCII(I)
      IF( I.EQ.0) I=32
      IF( ICDATA(0,I).NE.KFONT) THEN
      CALL XCHDEC(ICDATA,CHDATA,I)
      ICDATA(0,I)=KFONT
      ENDIF
      NCD=ICDATA(1,I)
      IX= ICDATA(NCD-1,I)
      IF( IX.GE.50)   IX=IX-50
      ITX=ITX+IX
  8   CONTINUE
      XWIDTH= ITX* SX
 600  IF( IPOS ) 601,602,603
 602     XSPOS=XO-0.5*XWIDTH
      GOTO 300
 603     XSPOS=XO- XWIDTH
      GOTO 300
 601     XSPOS=XO
 300  CONTINUE
      YSPOS = YO
      XSP = XSPOS
      YSP = YSPOS
      XTPOS = XSPOS
      YTPOS = YSPOS
      CALL XCPNUP(XSP, YSP)
      DO 1 ICHR=1,N
       CTEMP = STRING (ICHR:ICHR)
      I = ICHAR(CTEMP)
      IF (I.NE.0) I = ICRAM(I)
      IF (I.NE.0) I = IASCII(I)
      IF (I .EQ. 0) I=32
      IF( ICDATA(0,I).NE.KFONT) THEN
      CALL XCHDEC(ICDATA,CHDATA,I)
      ICDATA(0,I)=KFONT
      ENDIF
      NCD=ICDATA(1,I)
      DO 3 ICD=2,NCD,2
       IX= ICDATA(ICD,I)
       JY= ICDATA(ICD+1,I)
         MODE=.TRUE.
       IF( IX.GE.50) THEN
         MODE=.FALSE.
         IX=IX-50
       ENDIF
       XTPOS = XSP + FLOAT(IX)*SX
       YTPOS = YSP + FLOAT(JY)*SY
C        IF (XTPOS.GT.XR.OR.XTPOS.LT.XL) PRINT*,'Out of bound in x-dir.'
C        IF (YTPOS.GT.YT.OR.YTPOS.LT.YB) PRINT*,'Out of bound in y-dir.'
       IF (MODE)  THEN
          CALL XCPNDN(XTPOS, YTPOS )
       ELSE
          CALL XCPNUP(XTPOS, YTPOS )
       ENDIF
  3   CONTINUE
       XSP=XTPOS
       YSP=YTPOS
  1   CONTINUE

      DO 2 N=1,NUNDLN
       XST = XSPOS - 5.0*SX
       YST = YSPOS - 15.0*SY
       XFI = XTPOS + 5.0*SX
       YFI = YTPOS - 15.0*SY
       CALL XCPNUP (XST,YST)
       CALL XCPNDN (XFI,YFI)
    2 CONTINUE
C     XCHPEN=XTPOS
C     YCHPEN=YTPOS
CPV  change for efficient dashed lines
C
 200  CONTINUE
      IF (ITURNPS.NE.0) THEN
         CALL XPSCON
      END IF
      ITITLPS=0
      IF (IDISFONT.NE.0) THEN
         CALL XDISON
      END IF  
      IDISFONT=0
C
      IF(KFULL.NE.1.AND.IPV.EQ.1)CALL XRBROK(KFULL)
      CALL XLCOL(KCOL,LCOL,MCOL,N1COL)
      CALL XSAVLB
CPV
      RETURN
  100 FORMAT(2A,2A)
  101 FORMAT(1A)
  103 FORMAT(I2,1X,I2)
CPV
      ENTRY XCOLTX(ICTX)
      ICOLTX(1)=ICTX(1)
      ICOLTX(2)=ICTX(2)
      ICOLTX(4)=ICTX(3)
      RETURN
      ENTRY XCOLTX2(ICTX2)
      ICOLTX(2)=ICTX2
      RETURN
      ENTRY XCOLTX3(ICTX3)
      ICOLTX(3)=ICTX3
      RETURN
      ENTRY XCOLTX4(ICTX4)
      ICOLTX(4)=ICTX4
      RETURN
C
      ENTRY XLETPS(IIN,IVERT)
C
      IF (IVERT.EQ.1) THEN
         ITITLPS=2
      ELSE
         ITITLPS=1
      END IF
C
      IF (IIN.LT.0) THEN
         IT2=MOD(IABS(IIN),1000)
         IT3=(-IIN-IT2)/1000
         ITITLSZ=NINT(REAL(IT2)*0.57)
         IF (ITITLSZ.EQ.0) ITITLSZ=57
         IF (ITITLSZ.LT.50) ITITLSZ=50
         ITITLCL=IT3
      END IF
C
      ITITFN=2
C
      RETURN
C
      ENTRY XLETPSA(KT2,KT3,KT4,KT5)
C
      ITITLPS=1
      IF (KT4.GT.0) ITITLPS=2
C
      ITITLSZ=NINT(REAL(KT2)*0.57)
      IF (ITITLSZ.EQ.0) ITITLSZ=57
      IF (ITITLSZ.LT.50) ITITLSZ=50
      ITITLCL=KT3
      ITITFN=KT5
      RETURN
C
      ENTRY XFONTT(KFONTT)
      IFONTT=KFONTT
      RETURN
C
C
      ENTRY XLETFONT
      IDISFONT=1
      RETURN
C
C
      ENTRY XCOLFONT(KFNTCOL)
      IFNTCOL=KFNTCOL
      RETURN
C
      END
