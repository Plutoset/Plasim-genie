      SUBROUTINE XZCNTA(Z,ZG,IWRK,MD,M ,N ,CL,NCL, MODE)
C
      INTEGER MD
      INTEGER M
      INTEGER MODE
      REAL ZINC
      REAL CL
      REAL Z
      INTEGER N
      REAL ZMAX
      REAL ZMIN
      INTEGER NCL
      INTEGER NCLMAX
      INTEGER NMAX
      INTEGER NCLMIN
      INTEGER NMIN
      REAL ZMAX1
      REAL ZMIN1
      INTEGER J
      INTEGER I
      REAL ZK
      REAL XRAG
      REAL YRAG
      REAL XU
      INTEGER IF0
      INTEGER IB0
      INTEGER ID1
      INTEGER ID0
      INTEGER KLBON
      INTEGER KFULL
      INTEGER KF1
      INTEGER KB1
      INTEGER KF2
      INTEGER KB2
      INTEGER KTHICK
      REAL EPS
      REAL CLV
      INTEGER KCL
      REAL CLREF
      INTEGER IDREF
      INTEGER ICLF
      INTEGER LABTYP
      INTEGER NOCL
      INTEGER LCH
      INTEGER LLBFMT
      INTEGER ICLENG
      INTEGER IHLF
      INTEGER LHILIT
      INTEGER LCPTN
      INTEGER KCT0
      INTEGER IWRK
      INTEGER LAXFMT
C
      DIMENSION ZG(MD ,*),Z(MD ,*),IWRK(M ,*),CL(*)
      COMMON /XCRF17/ CLREF,LCPTN,LABTYP,ICLF,LHILIT,IHLF,KCT0
      COMMON /XCLM19/ NMIN, NMAX
      COMMON /XFMT33/ LBFMT, AXFMT
      COMMON /XFMT34/ LLBFMT,LAXFMT
      CHARACTER LBFMT*50, AXFMT*10
      CHARACTER CH*20
      COMPLEX   ZG
      IF( MODE.LT.1.OR.MODE.GT.3) THEN
      PRINT*,' Input MODE for XCONTB not between 1 and 3, job stoped.'
      STOP 999
      ENDIF
      GOTO ( 50,51,52 ) MODE
 50   ZINC=CL(2)-CL(1)
      CALL XCLEVL(Z,MD, M,N,ZMAX,ZMIN,ZINC,CL,NCL)
      IF( NCL.EQ.1 ) RETURN
      GOTO 55
 51   NCLMAX=NMAX
      NCLMIN=NMIN
      ZINC=CL(2)-CL(1)
      CALL XNCTRS( 0, 500 )
      CALL XCLEVL(Z,MD, M,N,ZMAX,ZMIN,ZINC,CL,NCL)
      IF( NCL.EQ.1 ) RETURN
      CALL XNCTRS( NCLMIN, NCLMAX )
      GOTO 55
 52   IF( NCL-1 ) 101, 102, 103
 101  RETURN
 102  ZINC=1.0
      GOTO 104
 103  ZINC=CL(2)-CL(1)
 104  ZMAX1=Z(1,1)
      ZMIN1=ZMAX1
      DO 2 J=1,N
      DO 2 I=1,M
      ZK=Z(I,J)
      ZMAX1= MAX (ZMAX1,ZK)
      ZMIN1= MIN (ZMIN1,ZK)
 2    CONTINUE
 55   CONTINUE

      CALL XQRANG( XRAG, YRAG )
      XU= SQRT( ABS(XRAG*YRAG) )
      IF0= 10*XU
      IB0=  5*XU
      ID1=  3*XU
      ID0=  3*XU
      CALL XQLBON( KLBON)
      CALL XQFULL( KFULL )
      IF( KFULL.EQ.0 ) CALL XQBRKN( KF1,KB1,KF2,KB2)
      CALL XQTHIK( KTHICK )

      EPS=0.1*ZINC
      CLV=CL(1)-ZINC
      DO 10 KCL=1,NCL
      IF( MODE.EQ.3) THEN
      CLV=CLV+ZINC
      IF(CLV-ZMAX1   ) 4,4,10
 4      IF( ABS( CLV-CLREF ).LT. EPS        ) CLV=CLREF
      CL(KCL )=CLV
      ENDIF
      IDREF=NINT((CL(KCL)-CLREF)/ZINC)
      IF((MOD(IDREF,ICLF).EQ.0.OR.NCL.EQ.1).AND. LABTYP.NE.0) THEN
        IF( LABTYP.LT.0) GOTO 46
        GOTO  (41,42) LABTYP
 41       IF( NCL.EQ. 1) THEN
          NOCL=1
        ELSE
          NOCL=IDREF
        ENDIF
        CALL XICH( NOCL,CH,LCH)
        GOTO 43
 42       CONTINUE
C         IF( FLOAT( INT( ZINC ) ).EQ. ZINC .AND. FLOAT( INT(CLREF))
C    :        .EQ. CLREF) THEN
C           CALL XICH( INT(CL(KCL)), CH, LCH )
        IF( LBFMT(1:LLBFMT).NE.'*') THEN
          WRITE( CH, LBFMT(1:LLBFMT) ) CL(KCL)
          LCH=ICLENG( CH )
        ELSE
          CALL XRCH( CL(KCL),CH,LCH)
        ENDIF
 43       CONTINUE
        CALL XLABEL( CH(1:LCH) )
 46       CALL XLBON
      ELSE
        CALL XLBOFF
      ENDIF

 45     IF((MOD(IDREF,IHLF).EQ.0.OR.NCL.EQ.1).AND. LHILIT.NE.0 )THEN
        CALL XINTSY( 0.75 )
        CALL XTHICK(2)
      ELSE
        CALL XINTSY( 0.80 )
        CALL XTHICK(1)
      ENDIF

      GOTO ( 30,31,32,33 ) LCPTN+1
 30     IF( ABS( CL(KCL) ).LT. EPS ) GOTO 22
        IF( CL(KCL)) 21,22,23
 21         CALL XBROKN(IF0,IB0,IF0,IB0)
          GOTO 24
 22     IF(KCT0.EQ.1) CALL XBROKN(ID1, ID0,ID1,ID0 )
      IF(KCT0.EQ.2) CALL XBROKN(ID1,ID0,IF0,ID0)
      IF(KCT0.EQ.3) THEN
                  CALL XFULL
                  CALL XTHICK(2)
      ENDIF
          GOTO 24
 23         CALL XFULL
 24       CONTINUE
        GOTO 35
 31         CALL XFULL
        GOTO 35
 32         CALL XBROKN(IF0,IB0,IF0,IB0)
        GOTO 35
 33         CALL XBROKN(ID1,ID0,ID1,ID0 )
 35       CONTINUE
      CLV=CL(KCL)
      IF( KCT0.EQ.0.AND.ABS(CLV).LT.0.1*ZINC) GOTO 10
      CALL XZCNTR(Z,ZG ,IWRK,MD, M,N,CLV )
 10   CONTINUE
      IF( KFULL.EQ.1) CALL XFULL
      IF( KFULL.NE.1) CALL XBROKN( KF1,KB1,KF2,KB2)
      IF( KLBON.EQ.1) CALL XLBON
      IF( KLBON.NE.1) CALL XLBOFF
      CALL XTHICK( KTHICK )
      RETURN
      END
